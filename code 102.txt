/*
	Using Swing components - 
	- Swing is the new version for designing interfaces 
	- AWT is the old version - but whats interesting is that the many components are built from the 
	- original AWT controls - through the use of inheritance - 
	- as you experiment with what is in the textbook - take note how the "AWT" ideas are still used 
*/

import javax.swing.*; // importing and allowing use to use swing - sidenote* remember how we imported JOptionPane 
import java.awt.*; //needed because we utilize the old components/classes/methods in certain parts 

public class SwingingComponents1{

	public static void main(String[] args){

		// Almost all Swing controls/components we use contain the alphabet 'J' in front of the 
		// name of the control 
 		
		JFrame frmMain = new JFrame("TITLE"); // window is called a frame here ... 

		// https://docs.oracle.com/javase/7/docs/api/javax/swing/JFrame.html
		
		//frmMain.setSize(500, 250); // this version defines the size but not the location 
		// running the above line will position the window at the top left of the screen 
		
		frmMain.setBounds(350,50,250,300); // this defines the size and the location 
		
		frmMain.setVisible(true); // place/display the window on the screen 

		// label to display content - similar to the label you use to place on books 

		JLabel lblDisplay1 = new JLabel("Display something over here");
		JLabel lblDisplay2 = new JLabel("The quick brown fox");
		JLabel lblDisplay3 = new JLabel("Here is this guy screaming in class when he doesn't have to");
		// take note of the above result 
		
		
		/*
		JLabel lblDisplay1 = new JLabel("Display something over here");
		JLabel lblDisplay2 = new JLabel("The quick brown fox", 20);
		JLabel lblDisplay3 = new JLabel("Here is this guy screaming in class when he doesn't have to", 50);
		// the numbers here are a parameter that suppose to define some kind of position 
		// however running the above lines, the labels are not displayed at all 
		*/

		// in order to fix the idea that the labels must be displayed neatly - 
		// we need to use a layout manager - flowLayout being one of them ... 
		// take note when typing the code - FlowLayout needs the import java.awt.*; lines above 
		// because it is one of the old concepts still used till today 

		frmMain.setLayout(new FlowLayout()); 	
		// new FlowLayout() ? what is the default? 
		// new FlowLayout(FlowLayout.LEFT)
		// new FlowLayout(FlowLayout.RIGHT)
		// new FlowLayout(FlowLayout.CENTER)
		// what do the above lines do? 
			
		frmMain.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
		// a way to end the program when the window is closed

		// placing a control on the window is quite simple ... 
		frmMain.add(lblDisplay1);
		frmMain.add(lblDisplay2);
		frmMain.add(lblDisplay3);
		
		
	}

}